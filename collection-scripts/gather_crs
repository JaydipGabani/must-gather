#!/bin/bash
source pwait
max_parallelism=10

# Cluster passed in from main gather
cluster=$1
namespaces=$2

# Resource list
resources=()

# Migration
for i in $(/usr/bin/oc get crd | grep migration.openshift.io | awk '{print $1}'); do
  resources+=($i)
done

# Velero
for i in $(/usr/bin/oc get crd | grep velero.io | awk '{print $1}'); do
  resources+=($i)
done

echo "[cluster=${cluster}] Starting collection of: [${resources[@]}]"

# we use nested loops to nicely output objects partitioned per namespace, kind
for resource in ${resources[@]}; do
  echo "[cluster=${cluster}] Collecting ${resource}"
  /usr/bin/oc get ${resource} --all-namespaces -o custom-columns=NAME:.metadata.name,NAMESPACE:.metadata.namespace --no-headers 2> /dev/null | \
  while read ocresource; do
    ocobject=$(echo $ocresource | awk '{print $1}')
    ocproject=$(echo $ocresource | awk '{print $2}')
    if [ -z "${ocproject}" ]|[ "${ocproject}" == "<none>" ]; then
      object_collection_path=must-gather/${cluster}/cluster-scoped-resources/${resource}
      mkdir -p ${object_collection_path}
      /usr/bin/oc get ${resource} -o yaml ${ocobject} &> ${object_collection_path}/${ocobject}.yaml &
    else
      skip=("migmigrations.migration.openshift.io" "migplans.migration.openshift.io")
      if [[ ${skip[*]} =~ "${resource}" ]]; then
        continue
      fi
      object_collection_path=must-gather/${cluster}/namespaces/${ocproject}/crs/${resource}
      mkdir -p ${object_collection_path}
      /usr/bin/oc get ${resource} -n ${ocproject} -o yaml ${ocobject} &> ${object_collection_path}/${ocobject}.yaml & 
    fi
    pwait $max_parallelism
  done
done

for ns in ${namespaces[@]}; do
  for migplan in $(oc get migplan --namespace ${ns} --no-headers | awk '{print $1}'); do
    mkdir -p "/must-gather/migplan-${migplan}"
    oc get migplan ${migplan} -o yaml --namespace ${ns} &> "/must-gather/migplan-${migplan}/${migplan}.yml" &
    pwait $max_parallelism
  done

  for migmigration in $(oc get migmigration --namespace ${ns} --no-headers | awk '{print $1}'); do
    migplan=$(oc get migmigration ${migmigration} --namespace ${ns} -o jsonpath='{.spec.migPlanRef.name}')
    mkdir -p "/must-gather/migplan-${migplan}/migmigration-${migmigration}"
    oc get migmigration ${migmigration} -o yaml --namespace ${ns} &> "/must-gather/migplan-${migplan}/migmigration-${migmigration}/migmigration-${migmigration}.yml" &
    pwait $max_parallelism
  done
done
wait
